package Presentación.FrameTienda;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JOptionPane;

import Negocio.Empleado.BOEmpleadoFijo;
import Negocio.Empleado.BOEmpleadoPracticas;
import Negocio.Empleado.TransferEmpleado;
import Negocio.Empleado.TransferEmpleadoFijo;
import Negocio.Empleado.TransferEmpleadoPracticas;
import Negocio.Tarea.TransferLineaTarea;
import Negocio.Tarea.TransferTarea;
import Presentación.Controlador.AppControlador;
import Presentación.Controlador.Context;
import Presentación.Controlador.EventoNegocio;
import Presentación.Empleado.JFrameEmpleado;


@SuppressWarnings("serial")
public class JFrameEmpleadoImp extends JFrameEmpleado {

	/**
	 * Creates new form JFrameEmpleado
	 */
	public JFrameEmpleadoImp() {
		super("Empleado");
		initComponents();
		idEmpleado.setEnabled(false);
		comboIntencionQuedarse.setEnabled(false);
		modifica.setEnabled(false);
		modifica.setVisible(false);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPasswordField1 = new javax.swing.JPasswordField();
		buttonGroup1 = new javax.swing.ButtonGroup();
		jPanel1 = new javax.swing.JPanel();
		comboBox = new javax.swing.JComboBox();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		idEmpleado = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		area = new javax.swing.JTextArea();
		comboFijo = new javax.swing.JComboBox();
		jLabel4 = new javax.swing.JLabel();
		label33 = new javax.swing.JLabel();
		dni = new javax.swing.JTextField();
		labelNombre = new javax.swing.JLabel();
		nombre = new javax.swing.JTextField();
		jLabel5 = new javax.swing.JLabel();
		anios = new javax.swing.JTextField();
		idDepartamento = new javax.swing.JTextField();
		jLabel6 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		sueldo = new javax.swing.JTextField();
		jLabel8 = new javax.swing.JLabel();
		telefono = new javax.swing.JTextField();
		comboIntencionQuedarse = new javax.swing.JComboBox();
		jLabel9 = new javax.swing.JLabel();
		ok = new javax.swing.JButton();
		modifica = new javax.swing.JButton();

		ok.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				okActionPerformed(evt);
			}
		}
		);

		modifica.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				modificaActionPerformed(evt);
			}
		}
		);

		comboFijo.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent evt){
				comboFijoActionPerformed(evt);
			}
		});
		jPasswordField1.setText("jPasswordField1");

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		comboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALTA", "BAJA", "MUESTRA", "MUESTRA TODOS", "MODIFICA" }));
		comboBox.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				comboBoxActionPerformed(evt);
			}
		});

		idEmpleado.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				idEmpleadoActionPerformed(evt);
			}
		});

		jLabel3.setText("ID Empleado");

		area.setEditable(false);
		area.setColumns(20);
		area.setRows(5);
		jScrollPane1.setViewportView(area);

		comboFijo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SI", "NO" }));

		jLabel4.setText("Es Fijo?");

		label33.setText("DNI");

		dni.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				dniActionPerformed(evt);
			}
		});

		labelNombre.setText("Nombre");

		nombre.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				nombreActionPerformed(evt);
			}
		});

		jLabel5.setText("Num anios");

		anios.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				aniosActionPerformed(evt);
			}
		});

		jLabel6.setText("ID Departamento");

		jLabel7.setText("Sueldo");

		jLabel8.setText("Telefono");

		comboIntencionQuedarse.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SI", "NO" }));

		jLabel9.setText("Desea quedarse?");

		ok.setText("OK");

		modifica.setText("Modifica");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addGap(20, 20, 20)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel1Layout.createSequentialGroup()
										.addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(264, 264, 264)
										.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
										.addGroup(jPanel1Layout.createSequentialGroup()
												.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(jPanel1Layout.createSequentialGroup()
																.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																		.addComponent(jLabel3)
																		.addComponent(label33)
																		.addComponent(labelNombre)
																		.addComponent(jLabel6)
																		.addComponent(jLabel7)
																		.addComponent(jLabel8))
																		.addGap(18, 18, 18)
																		.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
																				.addComponent(dni, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
																				.addComponent(sueldo)
																				.addComponent(telefono)
																				.addComponent(idEmpleado)
																				.addComponent(nombre)
																				.addComponent(idDepartamento))
																				.addGap(82, 82, 82)
																				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																						.addGroup(jPanel1Layout.createSequentialGroup()
																								.addGap(1, 1, 1)
																								.addComponent(modifica)
																								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																								.addComponent(ok, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
																								.addGroup(jPanel1Layout.createSequentialGroup()
																										.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																												.addComponent(jLabel5)
																												.addComponent(jLabel4))
																												.addGap(60, 60, 60)
																												.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																														.addComponent(anios, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
																														.addComponent(comboFijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
																														.addGroup(jPanel1Layout.createSequentialGroup()
																																.addComponent(jLabel9)
																																.addGap(26, 26, 26)
																																.addComponent(comboIntencionQuedarse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
																																.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE))
																																.addGap(0, 0, Short.MAX_VALUE))))
		);
		jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel1Layout.createSequentialGroup()
										.addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(jLabel1)
										.addGap(26, 26, 26))
										.addGroup(jPanel1Layout.createSequentialGroup()
												.addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
												.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
														.addGroup(jPanel1Layout.createSequentialGroup()
																.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																		.addComponent(jLabel3)
																		.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(idEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(jLabel4)))
																				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(label33)
																						.addComponent(dni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
																						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																								.addComponent(labelNombre)
																								.addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
																								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																										.addComponent(idDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addComponent(jLabel6))
																										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																										.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																												.addComponent(jLabel7)
																												.addComponent(sueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
																												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																														.addComponent(jLabel8)
																														.addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
																														.addGroup(jPanel1Layout.createSequentialGroup()
																																.addGap(11, 11, 11)
																																.addComponent(comboFijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																																.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																																		.addComponent(jLabel5)
																																		.addComponent(anios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
																																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																																		.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																																				.addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addComponent(comboIntencionQuedarse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
																																				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																																				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																																						.addComponent(ok)
																																						.addComponent(modifica))
																																						.addGap(7, 7, 7)))
																																						.addGap(32, 32, 32)
																																						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
																																						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap())
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(27, Short.MAX_VALUE))
		);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void aniosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aniosActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_aniosActionPerformed

	private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_nombreActionPerformed

	private void dniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dniActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_dniActionPerformed

	private void idEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idEmpleadoActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_idEmpleadoActionPerformed

	private void comboFijoActionPerformed(java.awt.event.ActionEvent evt){
		String opcion = comboFijo.getSelectedItem().toString();

		if(opcion.equals("SI")){
			comboIntencionQuedarse.setEnabled(false);
			jLabel5.setEnabled(true);
			anios.setEnabled(true);
		}
		else{
			comboIntencionQuedarse.setEnabled(true);
			jLabel5.setEnabled(false);
			anios.setEnabled(false);
		}
	}

	private void comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxActionPerformed
		// TODO add your handling code here:

		String opcion = comboBox.getSelectedItem().toString();

		if(opcion.equals("ALTA")){
			idEmpleado.setEnabled(false);
			nombre.setEnabled(true);
			dni.setEnabled(true);
			telefono.setEnabled(true);
			sueldo.setEnabled(true);
			comboIntencionQuedarse.setEnabled(false);
			idDepartamento.setEnabled(true);
			modifica.setEnabled(true);
			anios.setEnabled(true);
			comboFijo.setEnabled(true);
			modifica.setVisible(false);
		}
		if(opcion.equals("BAJA")){
			idEmpleado.setEnabled(true);
			nombre.setEnabled(false);
			dni.setEnabled(false);
			telefono.setEnabled(false);
			sueldo.setEnabled(false);
			comboIntencionQuedarse.setEnabled(false);
			idDepartamento.setEnabled(false);
			modifica.setEnabled(false);
			anios.setEnabled(false);
			comboFijo.setEnabled(false);
			modifica.setVisible(false);

		}

		if(opcion.equals("MUESTRA")){
			idEmpleado.setEnabled(true);
			nombre.setEnabled(false);
			dni.setEnabled(false);
			telefono.setEnabled(false);
			sueldo.setEnabled(false);
			comboIntencionQuedarse.setEnabled(false);
			idDepartamento.setEnabled(false);
			modifica.setEnabled(false);
			anios.setEnabled(false);
			comboFijo.setEnabled(false);
			modifica.setVisible(false);
		}
		if(opcion.equals("MUESTRA TODOS")){
			idEmpleado.setEnabled(false);
			nombre.setEnabled(false);
			dni.setEnabled(false);
			telefono.setEnabled(false);
			sueldo.setEnabled(false);
			comboIntencionQuedarse.setEnabled(false);
			idDepartamento.setEnabled(false);
			modifica.setEnabled(false);
			anios.setEnabled(false);
			comboFijo.setEnabled(false);
			modifica.setVisible(false);
		}

		if(opcion.equals("MODIFICA")){
			idEmpleado.setEnabled(true);
			nombre.setEnabled(false);
			dni.setEnabled(false);
			telefono.setEnabled(false);
			sueldo.setEnabled(false);
			comboIntencionQuedarse.setEnabled(false);
			idDepartamento.setEnabled(false);
			modifica.setEnabled(false);
			anios.setEnabled(false);
			comboFijo.setEnabled(false);
			modifica.setVisible(true);
		}
	}//GEN-LAST:event_comboBoxActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(JFrameEmpleadoImp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(JFrameEmpleadoImp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(JFrameEmpleadoImp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(JFrameEmpleadoImp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new JFrameEmpleadoImp().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JTextField anios;
	private javax.swing.JTextArea area;
	private javax.swing.ButtonGroup buttonGroup1;
	private javax.swing.JComboBox comboBox;
	private javax.swing.JComboBox comboFijo;
	private javax.swing.JComboBox comboIntencionQuedarse;
	private javax.swing.JTextField dni;
	private javax.swing.JTextField idDepartamento;
	private javax.swing.JTextField idEmpleado;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPasswordField jPasswordField1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JLabel label33;
	private javax.swing.JLabel labelNombre;
	private javax.swing.JButton modifica;
	private javax.swing.JTextField nombre;
	private javax.swing.JButton ok;
	private javax.swing.JTextField sueldo;
	private javax.swing.JTextField telefono;
	// End of variables declaration//GEN-END:variables

	protected void okActionPerformed(ActionEvent evt) {
		String opcion = comboBox.getSelectedItem().toString();
		Context contexto = new Context(0, null);

		if(opcion.equals("ALTA")){
			String dniIntroducido = dni.getText();
			String varSueldo = sueldo.getText();
			Double sueldoParsed = Double.parseDouble(varSueldo);
			String nombreIntroducido = nombre.getText();
			String telefonoIntroducido = telefono.getText();
			Integer idDepartamentoIntroducido = Integer.parseInt(idDepartamento.getText());
			String opcionFijo = comboFijo.getSelectedItem().toString();

			/*	public TransferEmpleadoFijo(Integer id, Boolean activo, String dni,
					double sueldo, String nombre, String telefono, Integer aniosTrabajando) {
				super(id, activo, dni, sueldo, nombre, telefono);
				this.aniosTrabajando = aniosTrabajando;*/

			if(opcionFijo.equals("SI")){
				TransferEmpleadoFijo tEmpleado = new TransferEmpleadoFijo(
						null,
						true,
						dniIntroducido,
						sueldoParsed,
						nombreIntroducido,
						telefonoIntroducido,
						Integer.parseInt(anios.getText()));

				tEmpleado.setIdDepartamento(idDepartamentoIntroducido);

				tEmpleado.setActivo(true);
				tEmpleado.setDni(dniIntroducido);
				tEmpleado.setIdDepartamento(idDepartamentoIntroducido);
				tEmpleado.setNombre(nombreIntroducido);
				tEmpleado.setSueldo(sueldoParsed);
				tEmpleado.setTelefono(telefonoIntroducido);
				tEmpleado.setAniosTrabajando(Integer.parseInt(anios.getText()));
				contexto.setDatos(tEmpleado);
			}

			else{
				TransferEmpleadoPracticas tEmpleado = new TransferEmpleadoPracticas(
						null,
						true,
						dniIntroducido,
						sueldoParsed,
						nombreIntroducido,
						telefonoIntroducido,
						comboIntencionQuedarse.getSelectedItem().equals("SI"));

				tEmpleado.setActivo(true);
				tEmpleado.setDni(dniIntroducido);
				tEmpleado.setSueldo(sueldoParsed);
				tEmpleado.setNombre(nombreIntroducido);
				tEmpleado.setIdDepartamento(idDepartamentoIntroducido);
				tEmpleado.setTelefono(telefonoIntroducido);
				tEmpleado.setIntencionQuedarse(comboIntencionQuedarse.getSelectedItem().equals("SI"));
				contexto.setDatos(tEmpleado);
			}

			contexto.setEvento(EventoNegocio.ALTA_EMPLEADO);
			AppControlador.getInstancia().accion(contexto);
		}

		else if(opcion.equals("BAJA")){
			int id_Empleado = Integer.parseInt(idEmpleado.getText());
			TransferEmpleado tEmpleado = new TransferEmpleado();
			tEmpleado.setId(id_Empleado);
			contexto.setEvento(EventoNegocio.BAJA_EMPLEADO);
			contexto.setDatos(tEmpleado);
			AppControlador.getInstancia().accion(contexto);
			//AppControlador.getInstancia().accion(contexto);
		}

		else if(opcion.equals("MUESTRA")){
			int id_Empleado = Integer.parseInt(idEmpleado.getText());
			TransferEmpleado tEmpleado = new TransferEmpleado();
			tEmpleado.setId(id_Empleado);
			contexto.setEvento(EventoNegocio.MUESTRA_EMPLEADO);
			contexto.setDatos(tEmpleado);
			AppControlador.getInstancia().accion(contexto);
		}

		else if(opcion.equals("MUESTRA TODOS")){
			contexto.setEvento(EventoNegocio.MUESTRA_TODOS_EMPLEADO);
			contexto.setDatos(null);
			AppControlador.getInstancia().accion(contexto);
		}

		else if(opcion.equals("MODIFICA")){
			int id_Empleado = Integer.parseInt(idEmpleado.getText());
			TransferEmpleado tEmpleado = new TransferEmpleado();
			tEmpleado.setId(id_Empleado);
			contexto.setEvento(EventoNegocio.MUESTRA_EMPLEADO_TEXTFIELDS);
			contexto.setDatos(tEmpleado);
			AppControlador.getInstancia().accion(contexto);
		}

	}

	protected void modificaActionPerformed(ActionEvent evt) {
		String opcion = comboBox.getSelectedItem().toString();
		Context contexto = new Context(0, null);

		if(opcion.equals("MODIFICA")){
			String dniIntroducido = dni.getText();
			String varSueldo = sueldo.getText();
			Double sueldoParsed = Double.parseDouble(varSueldo);
			String nombreIntroducido = nombre.getText();
			String telefonoIntroducido = telefono.getText();
			Integer idDepartamentoIntroducido = Integer.parseInt(idDepartamento.getText());
			String opcionFijo = comboFijo.getSelectedItem().toString();
			
			if(opcionFijo.equals("SI")){
				TransferEmpleadoFijo tEmpleado = new TransferEmpleadoFijo(
						null,
						true,
						dniIntroducido,
						sueldoParsed,
						nombreIntroducido,
						telefonoIntroducido,
						Integer.parseInt(anios.getText()));

				tEmpleado.setIdDepartamento(idDepartamentoIntroducido);

				tEmpleado.setId(Integer.parseInt(idEmpleado.getText()));
				tEmpleado.setActivo(true);
				tEmpleado.setDni(dniIntroducido);
				tEmpleado.setIdDepartamento(idDepartamentoIntroducido);
				tEmpleado.setNombre(nombreIntroducido);
				tEmpleado.setSueldo(sueldoParsed);
				tEmpleado.setTelefono(telefonoIntroducido);
				tEmpleado.setAniosTrabajando(Integer.parseInt(anios.getText()));
				contexto.setDatos(tEmpleado);
			}

			else{
				TransferEmpleadoPracticas tEmpleado = new TransferEmpleadoPracticas(
						null,
						true,
						dniIntroducido,
						sueldoParsed,
						nombreIntroducido,
						telefonoIntroducido,
						comboIntencionQuedarse.getSelectedItem().equals("SI"));
				
				tEmpleado.setId(Integer.parseInt(idEmpleado.getText()));
				tEmpleado.setActivo(true);
				tEmpleado.setDni(dniIntroducido);
				tEmpleado.setSueldo(sueldoParsed);
				tEmpleado.setNombre(nombreIntroducido);
				tEmpleado.setIdDepartamento(idDepartamentoIntroducido);
				tEmpleado.setTelefono(telefonoIntroducido);
				tEmpleado.setIntencionQuedarse(comboIntencionQuedarse.getSelectedItem().equals("SI"));
				contexto.setDatos(tEmpleado);
			}
			
			contexto.setEvento(EventoNegocio.MODIFICA_EMPLEADO);
			AppControlador.getInstancia().accion(contexto);
		}
	}

	@Override
	public void update(Context contextEntrada) {
		int evento = contextEntrada.getEvento();
		Object datos = contextEntrada.getDatos();

		switch(evento) {
		case(EventoGUI.ALTA_EMPLEADO_OK): {
			JOptionPane.showMessageDialog (
					null, "Empleado dado de alta con id: " + (Integer)datos);
			break;
		}

		case(EventoGUI.ALTA_EMPLEADO_ERROR): {
			JOptionPane.showMessageDialog(
					null, "Error al dar de alta el Empleado " );
			break;
		}

		case(EventoGUI.BAJA_EMPLEADO_OK): {
			JOptionPane.showMessageDialog (
					null, "Empleado dada de baja"
			);
			//textFieldIdFactura.setText((Integer)datos);
			break;
		}

		case(EventoGUI.BAJA_EMPLEADO_ERROR): {
			JOptionPane.showMessageDialog (
					null, "Error al dar de baja el Empleado" 
			);
			//textFieldIdFactura.setText((Integer)datos);
			break;
		}

		case(EventoGUI.MODIFICA_EMPLEADO_OK): {
			JOptionPane.showMessageDialog (
					null, "Empleado modificado con éxito"); 
			//textFieldIdFactura.setText((Integer)datos);
			break;
		}

		case(EventoGUI.MODIFICA_EMPLEADO_ERROR): {
			JOptionPane.showMessageDialog (
					null, "Error al modificar el Empleado");
			//textFieldIdFactura.setText((Integer)datos);
			break;
		}

		case(EventoGUI.MUESTRA_EMPLEADO_OK): {
			TransferEmpleado tEmpleado = (TransferEmpleado)datos;
			area.setText("");
			area.setText(area.getText() + "\n" + muestraEmpleado(tEmpleado) + "\n");
			break;
		}

		case(EventoGUI.MUESTRA_EMPLEADO_ERROR): {
			JOptionPane.showMessageDialog (
					null, "Error al mostrar el Empleado "
			);
			//textFieldIdFactura.setText((Integer)datos);
			break;
		}

		case(EventoGUI.MUESTRA_TODAS_EMPLEADOS_ERROR): {
			JOptionPane.showMessageDialog(null, "No hay ningun Empleado");
			break;
		}

		case(EventoGUI.MUESTRA_TODAS_EMPLEADOS_OK): {
			@SuppressWarnings("unchecked")
			ArrayList<TransferEmpleado> todosEmpleados = (ArrayList<TransferEmpleado>)datos;
			area.setText("MOSTRANDO TODOS LOS EMPLEADOS" + "\n");
			for(int i = 0; i < todosEmpleados.size(); i++) {
				TransferEmpleado tEmpleado = todosEmpleados.get(i);
				area.setText(area.getText() +  
						muestraEmpleado(tEmpleado) + "\n");
			}			

			break;
		}
		
		case(EventoGUI.MUESTRA_EMPLEADO_TEXTFIELDS):{
			TransferEmpleado tEmpleado = (TransferEmpleado)datos;
			String sueldoString = String.valueOf(tEmpleado.getSueldo());
			String deptString = String.valueOf(tEmpleado.getIdDepartamento());

			dni.setText(tEmpleado.getDni());
			nombre.setText(tEmpleado.getNombre());
			
			telefono.setText(tEmpleado.getTelefono());
			sueldo.setText(sueldoString);
			idDepartamento.setText(deptString);			
			
			dni.setEnabled(false);
			sueldo.setEnabled(true);			
			nombre.setEnabled(true);
			telefono.setEnabled(true);
			modifica.setEnabled(true);
			comboFijo.setEnabled(false);
			
			if(tEmpleado instanceof TransferEmpleadoFijo){
				TransferEmpleadoFijo tEmpFijo = (TransferEmpleadoFijo)tEmpleado;
				comboFijo.setSelectedIndex(0);
				anios.setEnabled(true);
				anios.setText(tEmpFijo.getAniosTrabajando().toString());
			}else {
				TransferEmpleadoPracticas tEmpPrac = (TransferEmpleadoPracticas)tEmpleado;				
				comboFijo.setSelectedIndex(1);
				comboIntencionQuedarse.setEnabled(true);
				
				if(tEmpPrac.getIntencionQuedarse()){
					comboIntencionQuedarse.setSelectedIndex(0);
				} else {
					comboIntencionQuedarse.setSelectedIndex(1);
				}
			}
			
			break;
			
		} 
		
		case(EventoGUI.MUESTRA_EMPLEADO_TEXTFIELDS_ERROR):{
			JOptionPane.showMessageDialog (
					null, "Error al recuperar el Empleado "
					
			);
			break;
		}
		} //FIN SWITCH

	} //Fin metodo update

	//Integer id, Boolean activo, String dni, Double sueldo, String nombre, String telefono
	private String muestraEmpleado(TransferEmpleado tEmpleado) {
		String empleadoMostrado = "";

			empleadoMostrado += "---------Empleado--------- \n";
			empleadoMostrado += "ID Empleado: " + tEmpleado.getId() + "\n";
			empleadoMostrado += "Nombre: " + tEmpleado.getNombre() + "\n";
			empleadoMostrado += "DNI: " + tEmpleado.getDni() + "\n";
			empleadoMostrado += "Activo: " + tEmpleado.getActivo() + "\n";
			empleadoMostrado += "Telefono: " + tEmpleado.getTelefono() + "\n";
			empleadoMostrado += "Departamento: " + tEmpleado.getIdDepartamento() + "\n";
			empleadoMostrado += "Sueldo: " + tEmpleado.getSueldo() + "\n";
			if(tEmpleado instanceof TransferEmpleadoFijo){
				empleadoMostrado += "Años trabajando: " + ((TransferEmpleadoFijo) tEmpleado).getAniosTrabajando() + "\n";
			} if(tEmpleado instanceof TransferEmpleadoPracticas){
				empleadoMostrado += "Intención de quedarse: ";
				if(((TransferEmpleadoPracticas) tEmpleado).getIntencionQuedarse()){
					empleadoMostrado += "Si" + "\n";
				} else {
					empleadoMostrado += "No" + "\n";
				}
			}
			//Tareas que tiene asignadas:
			empleadoMostrado+= "\n";
			empleadoMostrado += "-----Tareas asignadas a este empleado:-----" + "\n";
			ArrayList<TransferLineaTarea> listaLineaTareas = tEmpleado.getLineaTareas();
			int i = 1;
			for(TransferLineaTarea tLineaTarea: listaLineaTareas) {
				empleadoMostrado += "---Tarea " + i + "---" + "\n";
				empleadoMostrado += "id Tarea: " + tLineaTarea.getIdTarea() + "\n";
				empleadoMostrado += "Horas: " + tLineaTarea.getHoras() + "\n";
				empleadoMostrado += "Activa: " + tLineaTarea.isActivo() + "\n";
				empleadoMostrado+= "\n";
				i++;
			}
		
		empleadoMostrado += "-------------------------" + "\n";
		return empleadoMostrado;
	}
}

