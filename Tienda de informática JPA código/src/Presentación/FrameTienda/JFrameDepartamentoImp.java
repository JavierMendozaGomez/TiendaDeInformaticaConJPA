package Presentación.FrameTienda;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JOptionPane;

import Negocio.Departamento.TransferDepartamento;
import Presentación.Controlador.AppControlador;
import Presentación.Controlador.Context;
import Presentación.Controlador.EventoNegocio;
import Presentación.Departamento.JFrameDepartamento;


public class JFrameDepartamentoImp extends JFrameDepartamento {

	/**
	 * Creates new form JFrameDepartamento
	 */
	public JFrameDepartamentoImp() {
		super("Departamento");
		initComponents();
		modifica.setEnabled(false);
		modifica.setVisible(false);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		comboDepartamento = new javax.swing.JComboBox();
		jLabel1 = new javax.swing.JLabel();
		idDepartamento = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		nombre = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		telefono = new javax.swing.JTextField();
		jScrollPane1 = new javax.swing.JScrollPane();
		area = new javax.swing.JTextArea();
		ok = new javax.swing.JButton();
		modifica = new javax.swing.JButton();

		//==================================================================================== 
		//==================================================================================== 

		ok.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				okActionPerformed(evt);
			}
		}
		);

		modifica.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				modificaActionPerformed(evt);
			}
		}
		);



		//==================================================================================== 
		//==================================================================================== 

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		comboDepartamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALTA", "BAJA", "MODIFICA", "MUESTRA", "MUESTRA TODOS", "CONSULTA NOMINA" }));
		comboDepartamento.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				comboDepartamentoActionPerformed(evt);
			}
		});

		jLabel1.setText("ID");

		idDepartamento.setEnabled(false);
		idDepartamento.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				idDepartamentoActionPerformed(evt);
			}

			private void idDepartamentoActionPerformed(ActionEvent evt) {
				// TODO Apéndice de método generado automáticamente

			}
		});

		jLabel2.setText("Nombre");

		nombre.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				nombreActionPerformed(evt);
			}

			private void nombreActionPerformed(ActionEvent evt) {
				// TODO Apéndice de método generado automáticamente

			}
		});

		jLabel3.setText("Telefono");

		telefono.setText(" ");
		telefono.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				telefonoActionPerformed(evt);
			}

			private void telefonoActionPerformed(ActionEvent evt) {
				// TODO Apéndice de método generado automáticamente

			}
		});

		area.setEditable(false);
		area.setColumns(20);
		area.setRows(5);
		jScrollPane1.setViewportView(area);

		ok.setText("OK");
		/*
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });
		 */
		modifica.setText("Modifica");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addGap(20, 20, 20)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
								.addGroup(jPanel1Layout.createSequentialGroup()
										.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addGroup(jPanel1Layout.createSequentialGroup()
														.addComponent(jLabel3)
														.addGap(18, 18, 18)
														.addComponent(telefono))
														.addComponent(comboDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addGroup(jPanel1Layout.createSequentialGroup()
																.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																		.addComponent(jLabel1)
																		.addComponent(jLabel2))
																		.addGap(23, 23, 23)
																		.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
																				.addComponent(nombre, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
																				.addComponent(idDepartamento))))
																				.addGap(27, 27, 27)
																				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
																						.addComponent(modifica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																						.addComponent(ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
																						.addGap(0, 278, Short.MAX_VALUE)))
																						.addContainerGap())
		);
		jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(comboDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel1)
								.addComponent(idDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(jLabel2)
										.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(modifica)))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jLabel3)
														.addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(ok))
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
														.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
														.addContainerGap())
		);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addContainerGap())
		);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void comboDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {
		String opcion = comboDepartamento.getSelectedItem().toString();
		if(opcion.equals("ALTA")){
			idDepartamento.setEnabled(false);
			nombre.setEnabled(true);
			telefono.setEnabled(true);
			modifica.setVisible(false);
			ok.setEnabled(true);
			ok.setVisible(true);
		}
		else if (opcion.equalsIgnoreCase("BAJA")){
			idDepartamento.setEnabled(true);
			nombre.setEnabled(false);
			telefono.setEnabled(false);
			modifica.setVisible(false);
			ok.setVisible(true);
			ok.setEnabled(true);

		}
		else if (opcion.equalsIgnoreCase("MODIFICA")){
			idDepartamento.setEnabled(true);
			nombre.setEnabled(false);
			ok.setVisible(true);
			telefono.setEnabled(false);
			modifica.setVisible(true);
			modifica.setEnabled(false);
			ok.setEnabled(true);


		}
		else if (opcion.equalsIgnoreCase("MUESTRA")){
			idDepartamento.setEnabled(true);
			nombre.setEnabled(false);
			telefono.setEnabled(false);
			modifica.setVisible(false);
			ok.setVisible(true);
			ok.setEnabled(true);

		}
		else if(opcion.equalsIgnoreCase("MUESTRA TODOS")){
			idDepartamento.setEnabled(false);
			nombre.setEnabled(false);
			telefono.setEnabled(false);
			modifica.setVisible(false);
			ok.setVisible(true);
			ok.setEnabled(true);
		}
		else{
			idDepartamento.setEnabled(true);
			nombre.setEnabled(false);
			telefono.setEnabled(false);
			modifica.setVisible(false);
			ok.setVisible(true);
			ok.setEnabled(true);

		}
	}

	private void okActionPerformed(ActionEvent evt) {
		String opcion = comboDepartamento.getSelectedItem().toString();
		Context contexto = new Context();

		if(opcion.equals("ALTA")){
			TransferDepartamento tDepartamento = new TransferDepartamento();
			String nombreIntroducido = nombre.getText();
			String telefonoIntroducido = telefono.getText();
			tDepartamento.setNombre(nombreIntroducido);
			tDepartamento.setTelefono(telefonoIntroducido);
			tDepartamento.setActivo(true);
			contexto.setEvento(EventoNegocio.ALTA_DEPARTAMENTO);
			contexto.setDatos(tDepartamento);
			AppControlador.getInstancia().accion(contexto);

			//actualizar();
		}

		else if(opcion.equals("BAJA")){
			Integer idIntroducido = Integer.parseInt(idDepartamento.getText());
			TransferDepartamento tDepartamento = new TransferDepartamento();
			tDepartamento.setId(idIntroducido);
			contexto.setEvento(EventoNegocio.BAJA_DEPARTAMENTO);
			contexto.setDatos(tDepartamento);
			AppControlador.getInstancia().accion(contexto);
			//actualizar();
		}

		else if(opcion.equals("MUESTRA")){
			Integer idIntroducido = Integer.parseInt(idDepartamento.getText());
			TransferDepartamento tDepartamento = new TransferDepartamento();
			tDepartamento.setId(idIntroducido);
			contexto.setEvento(EventoNegocio.MUESTRA_DEPARTAMENTO);
			contexto.setDatos(tDepartamento);
			AppControlador.getInstancia().accion(contexto);
			//actualizar();
		}

		else if(opcion.equals("MUESTRA TODOS")){
			contexto.setEvento(EventoNegocio.MUESTRA_TODOS_DEPARTAMENTO);
			contexto.setDatos(null);
			AppControlador.getInstancia().accion(contexto);
			//actualizar();
		}

		else if(opcion.equals("MODIFICA")){
			modifica.setEnabled(true);
			nombre.setEnabled(true);
			telefono.setEnabled(true);
			idDepartamento.setEnabled(false);
			ok.setEnabled(false);
			Integer idIntroducido = Integer.parseInt(idDepartamento.getText());
			TransferDepartamento tDepartamento = new TransferDepartamento();
			tDepartamento.setId(idIntroducido);
			contexto.setEvento(EventoNegocio.MUESTRA_DEPARTAMENTO_GUI);
			contexto.setDatos(tDepartamento);
			AppControlador.getInstancia().accion(contexto);
			//actualizar();
		}
		else if(opcion.equalsIgnoreCase("CONSULTA NOMINA")){
			Integer idIntroducido = Integer.parseInt(idDepartamento.getText());
			TransferDepartamento tDepartamento = new TransferDepartamento();
			tDepartamento.setId(idIntroducido);
			contexto.setEvento(EventoNegocio.CALCULAR_NOMINA);
			contexto.setDatos(tDepartamento);
			AppControlador.getInstancia().accion(contexto);
			//actualizar();
		}   

	}

	public void actualizar(){

		Context contexto = new Context();

		contexto.setEvento(EventoNegocio.MUESTRA_TODOS_DEPARTAMENTO);
		contexto.setDatos(null);
		AppControlador.getInstancia().accion(contexto);          

	}

	protected void modificaActionPerformed(ActionEvent evt) {
		String opcion = comboDepartamento.getSelectedItem().toString();
		Context contexto = new Context();

		if(opcion.equals("MODIFICA")){
			Integer idIntroducido = Integer.parseInt(idDepartamento.getText());
			String nombreIntroducido = nombre.getText();
			String telefonoIntroducido = telefono.getText();
			TransferDepartamento tDepartamento = new TransferDepartamento();
			tDepartamento.setId(idIntroducido);
			tDepartamento.setNombre(nombreIntroducido);
			tDepartamento.setTelefono(telefonoIntroducido);
			tDepartamento.setActivo(true);
			contexto.setEvento(EventoNegocio.MODIFICA_DEPARTAMENTO);
			contexto.setDatos(tDepartamento);
			AppControlador.getInstancia().accion(contexto);
		}

		//actualizar();

	}


	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(JFrameDepartamentoImp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(JFrameDepartamentoImp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(JFrameDepartamentoImp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(JFrameDepartamentoImp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new JFrameDepartamentoImp().setVisible(true);

			}
		});
	}

	private javax.swing.JTextArea area;
	private javax.swing.JComboBox comboDepartamento;
	private javax.swing.JTextField idDepartamento;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JButton modifica;
	private javax.swing.JTextField nombre;
	private javax.swing.JButton ok;
	private javax.swing.JTextField telefono;

	private String muestraDepartamento(TransferDepartamento tDepartamento) {
		String departamentoMostrado = "";
		departamentoMostrado += "---------Departamento--------- \n";
		departamentoMostrado += "ID Departamento: " + tDepartamento.getId() + "\n";
		departamentoMostrado += "Nombre: " + tDepartamento.getNombre() + "\n";
		departamentoMostrado += "Telefono: " + tDepartamento.getTelefono() + "\n";
		departamentoMostrado += "Activo: " + tDepartamento.getActivo() + "\n";

		departamentoMostrado+= "\n";
		departamentoMostrado+= "\n";
		return departamentoMostrado;
	}

	@Override
	public void update(Context contextEntrada) {
		int evento = contextEntrada.getEvento();
		Object datos = contextEntrada.getDatos();

		switch(evento) {
		case(EventoGUI.ALTA_DEPARTAMENTO_OK): {
			JOptionPane.showMessageDialog (
					null, "Departamento dado de alta con ID: " + (Integer)datos
			);
			break;
		}

		case(EventoGUI.ALTA_DEPARTAMENTO_ERROR): {
			JOptionPane.showMessageDialog(
					null, "Error al dar de alta el departamento");
			break;
		}

		case(EventoGUI.BAJA_DEPARTAMENTO_OK): {
			JOptionPane.showMessageDialog (
					null, "Departamento dada de baja");
			//textFieldIdFactura.setText((Integer)datos);
			break;
		}

		case(EventoGUI.BAJA_DEPARTAMENTO_ERROR): {
			JOptionPane.showMessageDialog (
					null, "Error al dar de baja el departamento");
			//textFieldIdFactura.setText((Integer)datos);
			break;
		}

		case(EventoGUI.MODIFICA_DEPARTAMENTO_OK): {
			JOptionPane.showMessageDialog (
					null, "Departamento modificado con éxito" );
			//textFieldIdFactura.setText((Integer)datos);
			break;
		}

		case(EventoGUI.MODIFICA_DEPARTAMENTO_ERROR): {
			JOptionPane.showMessageDialog (
					null, "Error al modificar el departamento"
			);
			//textFieldIdFactura.setText((Integer)datos);
			break;
		}

		case(EventoGUI.MUESTRA_DEPARTAMENTO_OK): {
			area.setText("");
			TransferDepartamento tDepartamento = (TransferDepartamento)datos;
			area.setText(area.getText() + "\n" + muestraDepartamento(tDepartamento) + "\n");
			idDepartamento.setText(tDepartamento.getId().toString());
			nombre.setText(tDepartamento.getNombre());
			telefono.setText(tDepartamento.getTelefono());
			break;
		}

		case(EventoGUI.MUESTRA_DEPARTAMENTO_ERROR): {

			JOptionPane.showMessageDialog (
					null, "Error al mostrar el departamento");
			//textFieldIdFactura.setText((Integer)datos);
			break;
		}

		case(EventoGUI.MUESTRA_TODAS_DEPARTAMENTOS_ERROR): {
			JOptionPane.showMessageDialog(null, "No hay ningun departamento");
			break;
		}

		case(EventoGUI.MUESTRA_TODAS_DEPARTAMENTOS_OK): {
			@SuppressWarnings("unchecked")
			ArrayList<TransferDepartamento> todosDepartamentos = (ArrayList<TransferDepartamento>)datos;
			area.setText("");
			for(int i = 0; i < todosDepartamentos.size(); i++) {
				TransferDepartamento tDepartamento = todosDepartamentos.get(i);
				area.setText(area.getText() +  muestraDepartamento(tDepartamento) + "\n");
			}

			break;
		}


		case(EventoGUI.MUESTRA_DEPARTAMENTO_TEXTFIELDS): {
			TransferDepartamento tDepartamento = (TransferDepartamento)datos;
			nombre.setText(tDepartamento.getNombre());
			telefono.setText(tDepartamento.getTelefono());

			break;
		}

		case(EventoGUI.MUESTRA_DEPARTAMENTO_TEXTFIELDS_ERROR): {
			JOptionPane.showMessageDialog (
					null, "Error al modificar el departamento");
			//textFieldIdFactura.setText((Integer)datos);
			break;
		}
		case(EventoGUI.CALCULAR_NOMINA_DEPARTAMENTO_OK):{
			area.setText("Nomina del departamento: " + (datos.toString()));
		break;}
		}
	}
}

